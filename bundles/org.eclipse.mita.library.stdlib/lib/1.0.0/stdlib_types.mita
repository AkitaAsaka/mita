/********************************************************************************
 * Copyright (c) 2017, 2018 Bosch Connected Devices and Solutions GmbH.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * Contributors:
 *    Bosch Connected Devices and Solutions GmbH - initial contribution
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/

package stdlib; 

export native-type int32 alias-of int32_t subtype-of integer header "stdint.h"
export native-type int16 alias-of int16_t subtype-of int32 header "stdint.h"
export native-type int8 alias-of int8_t subtype-of int16 header "stdint.h"

export native-type uint32 alias-of uint32_t subtype-of integer header "stdint.h"
export native-type uint16 alias-of uint16_t subtype-of uint32, int32 header "stdint.h"
export native-type uint8 alias-of uint8_t subtype-of uint16, int16 header "stdint.h"

export native-type bool subtype-of boolean header "stdbool.h"
export native-type double subtype-of real
export native-type float subtype-of double
export native-type void


export generated type string
	generator "org.eclipse.mita.library.stdlib.StringGenerator"
	size-inferrer "org.eclipse.mita.library.stdlib.StringSizeInferrer"
	
	constructor con(size : static uint32);

/**
 * A modality is represents part of the runtime state of a resource (e.g. a sensor value). 
 * This state can be read at any time. Note that even two consecutive reads of the same
 * modality can yield different values, as the runtime state may have changed in the meantime.
 */
export generated type modality<T>
	generator "org.eclipse.mita.library.stdlib.VirtualTypeGenerator"
	size-inferrer "org.eclipse.mita.library.stdlib.VirtualTypeSizeInferrer"
	validator "org.eclipse.mita.library.stdlib.VirtualTypeValidator"
	constructor con();

/**
 * Reads the value of a modality.
 */
export generated fn <T> read(self : modality<T>) : T
	generator "org.eclipse.mita.library.stdlib.functions.ModalityReadGenerator";

/**
 * A signal instance is a bidirectional channel to the outside world, configured in the setup block
 * of a resource. Using the read() or write() function, one can read or write to that signal instance.
 */
export generated type siginst<T>
	generator "org.eclipse.mita.library.stdlib.VirtualTypeGenerator"
	size-inferrer "org.eclipse.mita.library.stdlib.VirtualTypeSizeInferrer"
	validator "org.eclipse.mita.library.stdlib.VirtualTypeValidator"
	constructor con();

/**
 * Reads a value from the signal instance. Note that even two consecutive reads on a modality might yield different values.
 */
export generated fn <T> read(self : siginst<T>) : T
	generator "org.eclipse.mita.library.stdlib.functions.SignalInstanceReadWriteGenerator";

/**
 * Writes a value to the signal instance. Depending on the type of signal this write might take considerable time or trigger an event
 * down the line.
 */
export generated fn <T> write(self : siginst<T>, value : T) : void
	generator "org.eclipse.mita.library.stdlib.functions.SignalInstanceReadWriteGenerator";

/*
 * Base of all exceptions.
 */
export exception Exception;

/*
 * Exception indicating that an index was out of range.
 */
export exception IndexOutOfBoundsException;

/*
 * Exception indicating that a range was invalid.
 */
export exception InvalidRangeException;

/*
 * Indicates that there was no element of a certain kind available.
 */
export exception NoSuchElementException;

/*
 * Indicates that some action took longer than expected.
 */
export exception TimeoutException;
